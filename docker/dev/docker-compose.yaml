version: '3.7'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  minio:
    image: minio/minio
    environment:
        - MINIO_ROOT_USER=minio
        - MINIO_ROOT_PASSWORD=minio12345678
        - MINIO_PROMETHEUS_AUTH_TYPE=public
        - MINIO_CACHE="on"
        # - MINIO_CACHE_DRIVES=/mnt/drive1,/mnt/drive2
        - MINIO_CACHE_QUOTA=80 # 80% of the drive will be used for caching
        - MINIO_CACHE_AFTER=1 # Object will be cached after the first request to it
        - MINIO_CACHE_WATERMARK_LOW=70 # Least accessed objects will be erased after the cache disk reaches the 70% watermark
        - MINIO_CACHE_WATERMARK_HIGH=90
    command: 'server /data1 --console-address ":9001"'
    ports:
        # - "9000:9000"
        - "9001:9001"
    volumes: 
        - ./data1:/data1
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    # ports: 
      # - "9090:9090"
    volumes:
      - ../prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
    # networks:
    #   - monitor
    labels:
      org.label-schema.group: "monitor"          
  grafana: 
      image: grafana/grafana
      container_name: grafana
      restart: unless-stopped
      volumes:
        - grafana_data:/var/lib/grafana
        - ../grafana:/var/lib/grafana/dashboards
      ports:
          - "3000:3000"
      labels:
        org.label-schema.group: "monitor"
